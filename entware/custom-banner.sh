#!/bin/sh
#—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π:
#   opkg update && \
opkg install curl wget wget-ssl coreutils-df procps-ng-free procps-ng-uptime && \
curl -fsSL -o /opt/etc/custom-banner.sh https://raw.githubusercontent.com/pegakmop/pegakmop.github.io/refs/heads/main/entware/custom-banner.sh && \
chmod +x /opt/etc/custom-banner.sh && \
grep -qxF '/opt/etc/custom-banner.sh' ~/.profile || echo '/opt/etc/custom-banner.sh' >> ~/.profile
. /opt/etc/profile

# —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –∫–æ–º–∞–Ω–¥–æ–π:
#   rm -rf /opt/etc/custom-banner.sh 

# PROMPT
# colors

blk="\033[1;30m"   # Black
red="\033[1;31m"   # Red
grn="\033[1;32m"   # Green
ylw="\033[1;33m"   # Yellow
blu="\033[1;34m"   # Blue
pur="\033[1;35m"   # Purple
cyn="\033[1;36m"   # Cyan
wht="\033[1;37m"   # White
clr="\033[0m"      # Reset

print_menu() {
  # –û—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞
  printf "\033c"
  
  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞ (–µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è CYAN –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞)
  printf "${blu}"

  # –í—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
  cat << 'EOF'
                        _______   _________       _____    ____  ______
                       / ____/ | / /_  __/ |     / /   |  / __ \/ ____/
                      / __/ /  |/ / / /  | | /| / / /| | / /_/ / __/
                     / /___/ /|  / / /   | |/ |/ / ___ |/ _, _/ /___
                    /_____/_/ |_/ /_/    |__/|__/_/  |_/_/ |_/_____/
EOF
}

# –í—ã–∑–æ–≤ –±–∞–Ω–Ω–µ—Ä–∞
print_menu

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
sh_prompt() {
    PS1=${cyn}' \w '${grn}' \$ '${clr}
}
sh_prompt

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
opkg update > /dev/null 2>&1

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ CPU
_CPU_TYPE="$(cat /proc/cpuinfo | awk -F: '/(model|system)/{print $2}' | head -1 | sed 's, ,,')"

if [ "$(uname -m)" = "aarch64" ]; then
    CPU_TYPE="$_CPU_TYPE"
else
    CPU_TYPE="$_CPU_TYPE$(cat /proc/cpuinfo | awk -F: '/cpu model/{print $2}' | head -1)"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–Ω–µ—à–Ω–µ–≥–æ IP
EXT_IP="$(curl -s https://ipinfo.io/ip 2>/dev/null || echo 'N/A')"

# –û—Å–Ω–æ–≤–Ω–æ–π –≤—ã–≤–æ–¥
printf "\n"
printf "   ${wht} %-10s ${ylw} %-30s ${wht} %-10s ${ylw}    %-30s ${clr}\n" \
    "Date:" "üìÜ $(date)" \
    "Uptime:" "üïê $(uptime -p)"
printf "   ${wht} %-10s ${blu} %-30s ${wht} %-10s ${blu}  %-30s ${clr}\n" \
    "Router:" "$(ndmc -c "show version" 2>/dev/null | awk -F": " '/model/ {print $2}')" \
    "Accessed IP:" "$EXT_IP"
printf "   ${wht} %-10s ${grn} %-30s ${wht}   %-10s ${grn}    %-30s ${clr}\n" \
    "OS:" "$(uname -s) üêß" \
    "CPU:" "$CPU_TYPE"
printf "   ${wht} %-10s ${grn} %-30s ${wht} %-10s ${grn} %-30s ${clr}\n" \
    "Kernel:" "$(uname -r)" \
    "Architecture:" "$(uname -m)"

# –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ CPU ‚Äî —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω —Ñ–∞–π–ª
if [ -f /sys/class/thermal/thermal_zone0/temp ]; then
    CPU_TEMP_C=$(cat /sys/class/thermal/thermal_zone0/temp)
    if echo "$CPU_TEMP_C" | grep -Eq '^[0-9]+$'; then
        CPU_TEMP="$(($CPU_TEMP_C / 1000))¬∞C"
        printf "   ${wht} %-10s ${red} %-30s ${clr}\n" \
            "CPU Temp:" "$CPU_TEMP"
    fi
fi

# –û—Å—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
printf "   ${wht} %-10s ${pur} %-30s ${clr}\n" \
    "Disk:" "$(df -h | grep '/opt' | awk '{print $2" (size) / "$3" (used) / "$4" (free) / "$5" (used %) : üíæ "$6}')"
printf "   ${wht} %-10s ${pur} %-30s ${clr}\n" \
    "Memory:" "$(free -h --mega | awk '/Mem/{print $2" (total) / "$3" (used) / "$4" (free)"}')"
printf "   ${wht} %-10s ${pur} %-30s ${clr}\n" \
    "Swap:" "$(free -h --mega | awk '/Swap/{print $2" (total) / "$3" (used) / "$4" (free)"}')"
printf "   ${wht} %-10s ${pur} %-30s ${clr}\n" \
    "LA:" "$(cat /proc/loadavg | awk '{print $1" (1m) / "$2" (5m) / "$3" (15m)"}')"
printf "   ${wht} %-10s ${red} %-30s ${wht}\n" \
    "User:" "ü§µ $(echo $USER)"

# –í–µ—Ä—Å–∏—è Entware
if [ -f "/opt/etc/entware_release" ]; then
    printf "   ${wht} %-10s ${grn} %-30s ${clr}\n" \
        "Dist:" "$(awk -F= '/^PRETTY_NAME/ {gsub(/"/, "", $2); print $2}' /opt/etc/entware_release)"
else
    printf "   ${wht} %-10s ${grn} %-30s ${clr}\n" \
        "Dist:" "Entware"
fi

# –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
printf "   ${wht} %-10s ${cyn} %-30s ${wht}     %-10s ${cyn} %-30s ${clr}\n" \
    "Installed:" "üì¶üì¶ $(opkg list-installed | wc -l)" \
    "Upgrade:" "üì¶ $(opkg list-upgradable | wc -l)"
printf "\n"
