<!DOCTYPE html>
<html>
<head>
   <meta charset="UTF-8">
   <meta http-equiv="X-UA-Compatible" content="IE=edge">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Test @PiperPiedBot WebApps API</title>
   <script src="https://telegram.org/js/telegram-web-app.js"></script>
   <style>
      body {
         color: var(--tg-theme-text-color);
         background: var(--tg-theme-bg-color);
         display: flex;
         flex-direction: column;
         align-items: center;
         font-size: 18px;
      }

      .hint {
         color: var(--tg-theme-hint-color);
      }

      .link {
         color: var(--tg-theme-link-color);
      }

      .button {
         background: var(--tg-theme-button-color);
         color: var(--tg-theme-button-text-color);
         border: none;
         font-size: 18px;
         padding: 10px 20px;
         cursor: pointer;
      }

      .button:not(:last-child) {
         margin-bottom: 20px;
      }

      #usercard {
         text-align: center;
         margin-top: 20px;
      }
   </style>
</head>

<body>
   <div id="usercard"></div>
   <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</p>
   <a class="link" href="https://t.me/c/1699696734/166">üí≤–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –ö–∞–Ω–∞–ª</a>
   <a class="link" href="https://t.me/c/1733213073/5367">üí≤–ü—Ä–∏–≤–∞—Ç–Ω–∞—è –ì—Ä—É–ø–ø–∞</a>
   <a class="link" href="https://t.me/piper_pied/284">üÜì–ü—É–±–ª–∏—á–Ω—ã–π –ö–∞–Ω–∞–ª</a>
   <a class="link" href="https://t.me/piper_pied_discuss/22089">üÜì–ü—É–±–ª–∏—á–Ω–∞—è –ì—Ä—É–ø–ø–∞</a>
   <a class="link" href="https://pegakmop.t.me">‚ö†Ô∏è–ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å–≤—è–∑–∏</a>
   <p class="hint">–ï—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –¥–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–µ—á–µ–≥–æ –∏ –¥–µ—Ä–≥–∞—Ç—å –±–æ—Ç–∞ –≤ –±–µ—Å—Ç–æ–ª–∫—É, –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</p>
   <button hidden id="btn" class="button">–ü–æ–∫–∞–∑–∞—Ç—å/–°–∫—Ä—ã—Ç—å</button>
   <button hidden id="btnED" class="button">–†–∞–∑—Ä–µ—à–∏—Ç—å/–ó–∞–ø—Ä–µ—Ç–∏—Ç—å</button>
</body>

<script>
   let tg = window.Telegram.WebApp;
   tg.expand();
   tg.sendData("some string that we need to send");
   var search = window.location.search;
         const tg_user_id = `${tg.initDataUnsafe.user.id}`
         const url = 'https://api.telegram.org/bot5021692760:AAFP4REQhEq5n_8SD0g0JVxQCb6pIh6b0g4/GetChatMember';
         const data = new URLSearchParams({ chat_id: '-1001699696734', user_id: tg_user_id });
         const options = {
            method: 'POST',
            headers: {
               'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: data.toString()
         };

         fetch(url, options)
            .then(response => response.json())
            .then(data => {
               const status = data.result.status;
               const users = data.result.user.id;
               //alert('–∞–π–¥–∏  ' + users);
               const q900950b = 'http://q900950b.beget.tech/bot.php';
               const creator = `${window.location.pathname}?tg_user_id=${tg_user_id}&role=administrator&token=pegakmop`;
               const administrator = `${window.location.pathname}?tg_user_id=${tg_user_id}&role=administrator&token=pegakmop`;
               const member = `${window.location.pathname}?tg_user_id=${tg_user_id}&role=member&token=pegakmop`;
               const left = 'https://t.me/+x-5Kce_5vIU2ZjJi';
               const kick = 'https://t.me/piper_pied/3';
               //let tg = window.Telegram.WebApp;
               switch (status) {
                  case 'creator':
                     //tg.MainButton.setParams({"color": "#00ff00"});
                     tg.MainButton.setText("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –°–æ–∑–¥–∞—Ç–µ–ª—å!");
                     tg.MainButton.enable();
                     //tg.MainButton.show();
                     tg.MainButton.hide();
                     setTimeout(function() {
                        window.location.replace(q900950b);
                     }, 3000);
                     //window.location.href = q900950b;
                     //window.location.replace(q900950b);
                     //const newurl = '/q900950b.htm';
                     break;
                  case 'administrator':
                     tg.MainButton.setParams({"color": "#00ff00"});
                     tg.MainButton.setText("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ê–¥–º–∏–Ω!");
                     tg.MainButton.enable();
                     tg.MainButton.hide();
                     setTimeout(function() {
                        window.location.replace(q900950b);
                     }, 3000);
                     //tg.MainButton.show();
                     //window.location.href = administrator;
                     //window.location.replace(q900950b);
                     //const newurl = '/q900950b.htm';
                     break;
                  case 'member':
                     tg.MainButton.setParams({"color": "#00ff00"});
                     tg.MainButton.setText("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ø–æ–¥–ø–∏—Å—á–∏–∫!");
                     tg.MainButton.enable();
                     tg.MainButton.hide();
                     setTimeout(function() {
                        window.location.replace(q900950b);
                     }, 3000);
                     //tg.MainButton.show();
                     //window.location.href = member;
                     //window.location.replace(q900950b);
                     //const newurl = '/q900950b.htm';
                     break;
                  case 'left':
                     tg.MainButton.setParams({"color": "#ff0000"});
                     tg.MainButton.setText("–ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª!");
                     tg.MainButton.enable();
                     tg.MainButton.show();
                     alert('‚ö†Ô∏è –í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –ª–∏–±–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –Ω–µ–≥–æ, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ç–µ–ø–µ—Ä—å –≤–∞–º –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞ –Ω–µ –≤–µ—Ä–Ω–µ—Ç–µ—Å—å –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª');
                     window.location.href = left;
                     break;
                  default:
                     tg.MainButton.setParams({"color": "#ff0000"});
                     tg.MainButton.setText("–û—Ç–∫–∞–∑–∞–Ω–æ! –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞!");
                     tg.MainButton.enable();
                     tg.MainButton.show();
                     alert('‚õîÔ∏è –í—ã –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∏ –∑–∞–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫, –µ—Å–ª–∏ –≤–∏–¥–∏—Ç–µ –¥–∞–Ω–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É –∏ —Ö–æ—Ç–∏—Ç–µ –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –µ—Å–ª–∏ –≤—ã –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—Ä—É—à–∞–ª–∏, –∑–Ω–∞—á–∏—Ç –≤–∞—Å –≤–µ—Ä–Ω—É—Ç –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø');
                     window.location.href = kick;
               }
            })
            .catch(error => console.error('Error:', error));

  // let tg = window.Telegram.WebApp;
   tg.expand();

   let btn = document.getElementById("btn");
   btn.addEventListener('click', function(){
      if (tg.MainButton.isVisible){
         tg.MainButton.hide();
      } else {
         tg.MainButton.show();
      }
   });

   let btnED = document.getElementById("btnED");

btnED.addEventListener('click', function() {
    let email = localStorage.getItem('email');
    let password = localStorage.getItem('password');

    // –ï—Å–ª–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ localStorage, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏—Ö —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (!email || !password) {
        email = prompt("–í–≤–µ–¥–∏—Ç–µ email:");
        password = prompt("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å:");

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –≤ localStorage
        localStorage.setItem('email', email);
        localStorage.setItem('password', password);
    }

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å email –∏ –ø–∞—Ä–æ–ª–µ–º
    fetch('http://q900950b.beget.tech/login.php', { // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({email: email, password: password}) // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email –∏ –ø–∞—Ä–æ–ª—å
    })
    .then(response => response.json()) // –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
    .then(data => {
        let currentDate = new Date(); // –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
        let startDate = new Date(data.start_date); // –ü–æ–ª—É—á–∞–µ–º start_date —Å —Å–µ—Ä–≤–µ—Ä–∞
        let endDate = new Date(data.end_date); // –ü–æ–ª—É—á–∞–µ–º end_date —Å —Å–µ—Ä–≤–µ—Ä–∞

        if (data.success && currentDate >= startDate && currentDate <= endDate) {
            // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞ –∏ —Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–∞
            tg.MainButton.setParams({"color": "#000000"});
            tg.MainButton.textColor = "#00ff00";
            tg.MainButton.setText("–î–æ—Å—Ç—É–ø–Ω–æ");
            tg.MainButton.enable();
        } else {
            // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ—É—Å–ø–µ—à–Ω–∞ –∏–ª–∏ –¥–∞—Ç–∞ –Ω–µ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö
            tg.MainButton.setParams({"color": "#ff0000"});
            tg.MainButton.setText("–û—Ç–∫–∞–∑–∞–Ω–æ");
            tg.MainButton.disable();
            alert(data.message || "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω");
        }
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞:', error);
        alert("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.");
    });
});

   Telegram.WebApp.onEvent('mainButtonClicked', function(){
      tg.MainButton.setText("–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞");
      tg.sendData("some string that we need to send");
      //const newurl = `${window.location.origin}${window.location.pathname.replace('index', 'kino')}?tg_user_id=${tg.initDataUnsafe.user.id}`;
      const newurl = 'https://t.me/piper_pied/281'; //const newurl = `${window.location.origin}${window.location.pathname}?tgX_user_id=${tg.initDataUnsafe.user.id}`
      //alert(newurl);
      tg.MainButton.hide();
      window.location.replace(newurl);
      
   });

   let usercard = document.getElementById("usercard");
   let profName = document.createElement('p');
   profName.innerText = `${tg.initDataUnsafe.user.first_name} ${tg.initDataUnsafe.user.last_name} ${tg.initDataUnsafe.user.username} (${tg.initDataUnsafe.user.language_code})`;
   usercard.appendChild(profName);

   let userid = document.createElement('p');
   userid.innerText = `${tg.initDataUnsafe.user.id}`;
   usercard.appendChild(userid);
</script>

</html>
